#ifndef _ALTERA_SPW_ULTRA_LIGHT_H_
#define _ALTERA_SPW_ULTRA_LIGHT_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'spw_ulight_nofifo' in
 * file 'spw_ulight_nofifo.sopcinfo'.
 */

/*
 * This file contains macros for module 'hps_0' and devices
 * connected to the following masters:
 *   h2f_axi_master
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'led_fpga', class 'altera_avalon_pio'
 * The macros are prefixed with 'LED_FPGA_'.
 * The prefix is the slave descriptor.
 */
#define LED_FPGA_COMPONENT_TYPE altera_avalon_pio
#define LED_FPGA_COMPONENT_NAME led_fpga
#define LED_FPGA_BASE 0x0
#define LED_FPGA_SPAN 16
#define LED_FPGA_END 0xf
#define LED_FPGA_BIT_CLEARING_EDGE_REGISTER 0
#define LED_FPGA_BIT_MODIFYING_OUTPUT_REGISTER 0
#define LED_FPGA_CAPTURE 0
#define LED_FPGA_DATA_WIDTH 6
#define LED_FPGA_DO_TEST_BENCH_WIRING 0
#define LED_FPGA_DRIVEN_SIM_VALUE 0
#define LED_FPGA_EDGE_TYPE NONE
#define LED_FPGA_FREQ 50000000
#define LED_FPGA_HAS_IN 0
#define LED_FPGA_HAS_OUT 1
#define LED_FPGA_HAS_TRI 0
#define LED_FPGA_IRQ_TYPE NONE
#define LED_FPGA_RESET_VALUE 1

/*
 * Macros for device 'MONITOR_A', class 'altera_avalon_pio'
 * The macros are prefixed with 'MONITOR_A_'.
 * The prefix is the slave descriptor.
 */
#define MONITOR_A_COMPONENT_TYPE altera_avalon_pio
#define MONITOR_A_COMPONENT_NAME MONITOR_A
#define MONITOR_A_BASE 0x10
#define MONITOR_A_SPAN 16
#define MONITOR_A_END 0x1f
#define MONITOR_A_BIT_CLEARING_EDGE_REGISTER 0
#define MONITOR_A_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MONITOR_A_CAPTURE 0
#define MONITOR_A_DATA_WIDTH 6
#define MONITOR_A_DO_TEST_BENCH_WIRING 0
#define MONITOR_A_DRIVEN_SIM_VALUE 0
#define MONITOR_A_EDGE_TYPE NONE
#define MONITOR_A_FREQ 50000000
#define MONITOR_A_HAS_IN 1
#define MONITOR_A_HAS_OUT 0
#define MONITOR_A_HAS_TRI 0
#define MONITOR_A_IRQ_TYPE NONE
#define MONITOR_A_RESET_VALUE 0

/*
 * Macros for device 'MONITOR_B', class 'altera_avalon_pio'
 * The macros are prefixed with 'MONITOR_B_'.
 * The prefix is the slave descriptor.
 */
#define MONITOR_B_COMPONENT_TYPE altera_avalon_pio
#define MONITOR_B_COMPONENT_NAME MONITOR_B
#define MONITOR_B_BASE 0x20
#define MONITOR_B_SPAN 16
#define MONITOR_B_END 0x2f
#define MONITOR_B_BIT_CLEARING_EDGE_REGISTER 0
#define MONITOR_B_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MONITOR_B_CAPTURE 0
#define MONITOR_B_DATA_WIDTH 6
#define MONITOR_B_DO_TEST_BENCH_WIRING 0
#define MONITOR_B_DRIVEN_SIM_VALUE 0
#define MONITOR_B_EDGE_TYPE NONE
#define MONITOR_B_FREQ 50000000
#define MONITOR_B_HAS_IN 1
#define MONITOR_B_HAS_OUT 0
#define MONITOR_B_HAS_TRI 0
#define MONITOR_B_IRQ_TYPE NONE
#define MONITOR_B_RESET_VALUE 0

/*
 * Macros for device 'auto_start', class 'altera_avalon_pio'
 * The macros are prefixed with 'AUTO_START_'.
 * The prefix is the slave descriptor.
 */
#define AUTO_START_COMPONENT_TYPE altera_avalon_pio
#define AUTO_START_COMPONENT_NAME auto_start
#define AUTO_START_BASE 0x30
#define AUTO_START_SPAN 16
#define AUTO_START_END 0x3f
#define AUTO_START_BIT_CLEARING_EDGE_REGISTER 0
#define AUTO_START_BIT_MODIFYING_OUTPUT_REGISTER 0
#define AUTO_START_CAPTURE 0
#define AUTO_START_DATA_WIDTH 1
#define AUTO_START_DO_TEST_BENCH_WIRING 0
#define AUTO_START_DRIVEN_SIM_VALUE 0
#define AUTO_START_EDGE_TYPE NONE
#define AUTO_START_FREQ 50000000
#define AUTO_START_HAS_IN 0
#define AUTO_START_HAS_OUT 1
#define AUTO_START_HAS_TRI 0
#define AUTO_START_IRQ_TYPE NONE
#define AUTO_START_RESET_VALUE 0

/*
 * Macros for device 'clock_sel', class 'altera_avalon_pio'
 * The macros are prefixed with 'CLOCK_SEL_'.
 * The prefix is the slave descriptor.
 */
#define CLOCK_SEL_COMPONENT_TYPE altera_avalon_pio
#define CLOCK_SEL_COMPONENT_NAME clock_sel
#define CLOCK_SEL_BASE 0x40
#define CLOCK_SEL_SPAN 16
#define CLOCK_SEL_END 0x4f
#define CLOCK_SEL_BIT_CLEARING_EDGE_REGISTER 0
#define CLOCK_SEL_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CLOCK_SEL_CAPTURE 0
#define CLOCK_SEL_DATA_WIDTH 3
#define CLOCK_SEL_DO_TEST_BENCH_WIRING 0
#define CLOCK_SEL_DRIVEN_SIM_VALUE 0
#define CLOCK_SEL_EDGE_TYPE NONE
#define CLOCK_SEL_FREQ 50000000
#define CLOCK_SEL_HAS_IN 0
#define CLOCK_SEL_HAS_OUT 1
#define CLOCK_SEL_HAS_TRI 0
#define CLOCK_SEL_IRQ_TYPE NONE
#define CLOCK_SEL_RESET_VALUE 0

/*
 * Macros for device 'auto_start_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'AUTO_START_0_'.
 * The prefix is the slave descriptor.
 */
#define AUTO_START_0_COMPONENT_TYPE altera_avalon_pio
#define AUTO_START_0_COMPONENT_NAME auto_start_0
#define AUTO_START_0_BASE 0x50
#define AUTO_START_0_SPAN 16
#define AUTO_START_0_END 0x5f
#define AUTO_START_0_BIT_CLEARING_EDGE_REGISTER 0
#define AUTO_START_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define AUTO_START_0_CAPTURE 0
#define AUTO_START_0_DATA_WIDTH 1
#define AUTO_START_0_DO_TEST_BENCH_WIRING 0
#define AUTO_START_0_DRIVEN_SIM_VALUE 0
#define AUTO_START_0_EDGE_TYPE NONE
#define AUTO_START_0_FREQ 50000000
#define AUTO_START_0_HAS_IN 0
#define AUTO_START_0_HAS_OUT 1
#define AUTO_START_0_HAS_TRI 0
#define AUTO_START_0_IRQ_TYPE NONE
#define AUTO_START_0_RESET_VALUE 0

/*
 * Macros for device 'credit_error_rx', class 'altera_avalon_pio'
 * The macros are prefixed with 'CREDIT_ERROR_RX_'.
 * The prefix is the slave descriptor.
 */
#define CREDIT_ERROR_RX_COMPONENT_TYPE altera_avalon_pio
#define CREDIT_ERROR_RX_COMPONENT_NAME credit_error_rx
#define CREDIT_ERROR_RX_BASE 0x60
#define CREDIT_ERROR_RX_SPAN 16
#define CREDIT_ERROR_RX_END 0x6f
#define CREDIT_ERROR_RX_BIT_CLEARING_EDGE_REGISTER 0
#define CREDIT_ERROR_RX_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CREDIT_ERROR_RX_CAPTURE 0
#define CREDIT_ERROR_RX_DATA_WIDTH 1
#define CREDIT_ERROR_RX_DO_TEST_BENCH_WIRING 0
#define CREDIT_ERROR_RX_DRIVEN_SIM_VALUE 0
#define CREDIT_ERROR_RX_EDGE_TYPE NONE
#define CREDIT_ERROR_RX_FREQ 50000000
#define CREDIT_ERROR_RX_HAS_IN 0
#define CREDIT_ERROR_RX_HAS_OUT 1
#define CREDIT_ERROR_RX_HAS_TRI 0
#define CREDIT_ERROR_RX_IRQ_TYPE NONE
#define CREDIT_ERROR_RX_RESET_VALUE 0

/*
 * Macros for device 'credit_error_rx_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'CREDIT_ERROR_RX_0_'.
 * The prefix is the slave descriptor.
 */
#define CREDIT_ERROR_RX_0_COMPONENT_TYPE altera_avalon_pio
#define CREDIT_ERROR_RX_0_COMPONENT_NAME credit_error_rx_0
#define CREDIT_ERROR_RX_0_BASE 0x70
#define CREDIT_ERROR_RX_0_SPAN 16
#define CREDIT_ERROR_RX_0_END 0x7f
#define CREDIT_ERROR_RX_0_BIT_CLEARING_EDGE_REGISTER 0
#define CREDIT_ERROR_RX_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CREDIT_ERROR_RX_0_CAPTURE 0
#define CREDIT_ERROR_RX_0_DATA_WIDTH 1
#define CREDIT_ERROR_RX_0_DO_TEST_BENCH_WIRING 0
#define CREDIT_ERROR_RX_0_DRIVEN_SIM_VALUE 0
#define CREDIT_ERROR_RX_0_EDGE_TYPE NONE
#define CREDIT_ERROR_RX_0_FREQ 50000000
#define CREDIT_ERROR_RX_0_HAS_IN 0
#define CREDIT_ERROR_RX_0_HAS_OUT 1
#define CREDIT_ERROR_RX_0_HAS_TRI 0
#define CREDIT_ERROR_RX_0_IRQ_TYPE NONE
#define CREDIT_ERROR_RX_0_RESET_VALUE 0

/*
 * Macros for device 'data_en_to_w', class 'altera_avalon_pio'
 * The macros are prefixed with 'DATA_EN_TO_W_'.
 * The prefix is the slave descriptor.
 */
#define DATA_EN_TO_W_COMPONENT_TYPE altera_avalon_pio
#define DATA_EN_TO_W_COMPONENT_NAME data_en_to_w
#define DATA_EN_TO_W_BASE 0x80
#define DATA_EN_TO_W_SPAN 16
#define DATA_EN_TO_W_END 0x8f
#define DATA_EN_TO_W_BIT_CLEARING_EDGE_REGISTER 0
#define DATA_EN_TO_W_BIT_MODIFYING_OUTPUT_REGISTER 0
#define DATA_EN_TO_W_CAPTURE 0
#define DATA_EN_TO_W_DATA_WIDTH 1
#define DATA_EN_TO_W_DO_TEST_BENCH_WIRING 0
#define DATA_EN_TO_W_DRIVEN_SIM_VALUE 0
#define DATA_EN_TO_W_EDGE_TYPE NONE
#define DATA_EN_TO_W_FREQ 50000000
#define DATA_EN_TO_W_HAS_IN 0
#define DATA_EN_TO_W_HAS_OUT 1
#define DATA_EN_TO_W_HAS_TRI 0
#define DATA_EN_TO_W_IRQ_TYPE NONE
#define DATA_EN_TO_W_RESET_VALUE 0

/*
 * Macros for device 'data_en_to_w_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'DATA_EN_TO_W_0_'.
 * The prefix is the slave descriptor.
 */
#define DATA_EN_TO_W_0_COMPONENT_TYPE altera_avalon_pio
#define DATA_EN_TO_W_0_COMPONENT_NAME data_en_to_w_0
#define DATA_EN_TO_W_0_BASE 0x90
#define DATA_EN_TO_W_0_SPAN 16
#define DATA_EN_TO_W_0_END 0x9f
#define DATA_EN_TO_W_0_BIT_CLEARING_EDGE_REGISTER 0
#define DATA_EN_TO_W_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define DATA_EN_TO_W_0_CAPTURE 0
#define DATA_EN_TO_W_0_DATA_WIDTH 1
#define DATA_EN_TO_W_0_DO_TEST_BENCH_WIRING 0
#define DATA_EN_TO_W_0_DRIVEN_SIM_VALUE 0
#define DATA_EN_TO_W_0_EDGE_TYPE NONE
#define DATA_EN_TO_W_0_FREQ 50000000
#define DATA_EN_TO_W_0_HAS_IN 0
#define DATA_EN_TO_W_0_HAS_OUT 1
#define DATA_EN_TO_W_0_HAS_TRI 0
#define DATA_EN_TO_W_0_IRQ_TYPE NONE
#define DATA_EN_TO_W_0_RESET_VALUE 0

/*
 * Macros for device 'data_rx_r', class 'altera_avalon_pio'
 * The macros are prefixed with 'DATA_RX_R_'.
 * The prefix is the slave descriptor.
 */
#define DATA_RX_R_COMPONENT_TYPE altera_avalon_pio
#define DATA_RX_R_COMPONENT_NAME data_rx_r
#define DATA_RX_R_BASE 0xa0
#define DATA_RX_R_SPAN 16
#define DATA_RX_R_END 0xaf
#define DATA_RX_R_BIT_CLEARING_EDGE_REGISTER 0
#define DATA_RX_R_BIT_MODIFYING_OUTPUT_REGISTER 0
#define DATA_RX_R_CAPTURE 0
#define DATA_RX_R_DATA_WIDTH 9
#define DATA_RX_R_DO_TEST_BENCH_WIRING 0
#define DATA_RX_R_DRIVEN_SIM_VALUE 0
#define DATA_RX_R_EDGE_TYPE NONE
#define DATA_RX_R_FREQ 50000000
#define DATA_RX_R_HAS_IN 1
#define DATA_RX_R_HAS_OUT 0
#define DATA_RX_R_HAS_TRI 0
#define DATA_RX_R_IRQ_TYPE NONE
#define DATA_RX_R_RESET_VALUE 0

/*
 * Macros for device 'data_rx_r_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'DATA_RX_R_0_'.
 * The prefix is the slave descriptor.
 */
#define DATA_RX_R_0_COMPONENT_TYPE altera_avalon_pio
#define DATA_RX_R_0_COMPONENT_NAME data_rx_r_0
#define DATA_RX_R_0_BASE 0xb0
#define DATA_RX_R_0_SPAN 16
#define DATA_RX_R_0_END 0xbf
#define DATA_RX_R_0_BIT_CLEARING_EDGE_REGISTER 0
#define DATA_RX_R_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define DATA_RX_R_0_CAPTURE 0
#define DATA_RX_R_0_DATA_WIDTH 9
#define DATA_RX_R_0_DO_TEST_BENCH_WIRING 0
#define DATA_RX_R_0_DRIVEN_SIM_VALUE 0
#define DATA_RX_R_0_EDGE_TYPE NONE
#define DATA_RX_R_0_FREQ 50000000
#define DATA_RX_R_0_HAS_IN 1
#define DATA_RX_R_0_HAS_OUT 0
#define DATA_RX_R_0_HAS_TRI 0
#define DATA_RX_R_0_IRQ_TYPE NONE
#define DATA_RX_R_0_RESET_VALUE 0

/*
 * Macros for device 'data_rx_ready', class 'altera_avalon_pio'
 * The macros are prefixed with 'DATA_RX_READY_'.
 * The prefix is the slave descriptor.
 */
#define DATA_RX_READY_COMPONENT_TYPE altera_avalon_pio
#define DATA_RX_READY_COMPONENT_NAME data_rx_ready
#define DATA_RX_READY_BASE 0xc0
#define DATA_RX_READY_SPAN 16
#define DATA_RX_READY_END 0xcf
#define DATA_RX_READY_BIT_CLEARING_EDGE_REGISTER 0
#define DATA_RX_READY_BIT_MODIFYING_OUTPUT_REGISTER 0
#define DATA_RX_READY_CAPTURE 0
#define DATA_RX_READY_DATA_WIDTH 1
#define DATA_RX_READY_DO_TEST_BENCH_WIRING 0
#define DATA_RX_READY_DRIVEN_SIM_VALUE 0
#define DATA_RX_READY_EDGE_TYPE NONE
#define DATA_RX_READY_FREQ 50000000
#define DATA_RX_READY_HAS_IN 1
#define DATA_RX_READY_HAS_OUT 0
#define DATA_RX_READY_HAS_TRI 0
#define DATA_RX_READY_IRQ_TYPE NONE
#define DATA_RX_READY_RESET_VALUE 0

/*
 * Macros for device 'data_rx_ready_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'DATA_RX_READY_0_'.
 * The prefix is the slave descriptor.
 */
#define DATA_RX_READY_0_COMPONENT_TYPE altera_avalon_pio
#define DATA_RX_READY_0_COMPONENT_NAME data_rx_ready_0
#define DATA_RX_READY_0_BASE 0xd0
#define DATA_RX_READY_0_SPAN 16
#define DATA_RX_READY_0_END 0xdf
#define DATA_RX_READY_0_BIT_CLEARING_EDGE_REGISTER 0
#define DATA_RX_READY_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define DATA_RX_READY_0_CAPTURE 0
#define DATA_RX_READY_0_DATA_WIDTH 1
#define DATA_RX_READY_0_DO_TEST_BENCH_WIRING 0
#define DATA_RX_READY_0_DRIVEN_SIM_VALUE 0
#define DATA_RX_READY_0_EDGE_TYPE NONE
#define DATA_RX_READY_0_FREQ 50000000
#define DATA_RX_READY_0_HAS_IN 1
#define DATA_RX_READY_0_HAS_OUT 0
#define DATA_RX_READY_0_HAS_TRI 0
#define DATA_RX_READY_0_IRQ_TYPE NONE
#define DATA_RX_READY_0_RESET_VALUE 0

/*
 * Macros for device 'data_tx_ready', class 'altera_avalon_pio'
 * The macros are prefixed with 'DATA_TX_READY_'.
 * The prefix is the slave descriptor.
 */
#define DATA_TX_READY_COMPONENT_TYPE altera_avalon_pio
#define DATA_TX_READY_COMPONENT_NAME data_tx_ready
#define DATA_TX_READY_BASE 0xe0
#define DATA_TX_READY_SPAN 16
#define DATA_TX_READY_END 0xef
#define DATA_TX_READY_BIT_CLEARING_EDGE_REGISTER 0
#define DATA_TX_READY_BIT_MODIFYING_OUTPUT_REGISTER 0
#define DATA_TX_READY_CAPTURE 0
#define DATA_TX_READY_DATA_WIDTH 1
#define DATA_TX_READY_DO_TEST_BENCH_WIRING 0
#define DATA_TX_READY_DRIVEN_SIM_VALUE 0
#define DATA_TX_READY_EDGE_TYPE NONE
#define DATA_TX_READY_FREQ 50000000
#define DATA_TX_READY_HAS_IN 1
#define DATA_TX_READY_HAS_OUT 0
#define DATA_TX_READY_HAS_TRI 0
#define DATA_TX_READY_IRQ_TYPE NONE
#define DATA_TX_READY_RESET_VALUE 0

/*
 * Macros for device 'data_tx_ready_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'DATA_TX_READY_0_'.
 * The prefix is the slave descriptor.
 */
#define DATA_TX_READY_0_COMPONENT_TYPE altera_avalon_pio
#define DATA_TX_READY_0_COMPONENT_NAME data_tx_ready_0
#define DATA_TX_READY_0_BASE 0xf0
#define DATA_TX_READY_0_SPAN 16
#define DATA_TX_READY_0_END 0xff
#define DATA_TX_READY_0_BIT_CLEARING_EDGE_REGISTER 0
#define DATA_TX_READY_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define DATA_TX_READY_0_CAPTURE 0
#define DATA_TX_READY_0_DATA_WIDTH 1
#define DATA_TX_READY_0_DO_TEST_BENCH_WIRING 0
#define DATA_TX_READY_0_DRIVEN_SIM_VALUE 0
#define DATA_TX_READY_0_EDGE_TYPE NONE
#define DATA_TX_READY_0_FREQ 50000000
#define DATA_TX_READY_0_HAS_IN 1
#define DATA_TX_READY_0_HAS_OUT 0
#define DATA_TX_READY_0_HAS_TRI 0
#define DATA_TX_READY_0_IRQ_TYPE NONE
#define DATA_TX_READY_0_RESET_VALUE 0

/*
 * Macros for device 'data_tx_to_w', class 'altera_avalon_pio'
 * The macros are prefixed with 'DATA_TX_TO_W_'.
 * The prefix is the slave descriptor.
 */
#define DATA_TX_TO_W_COMPONENT_TYPE altera_avalon_pio
#define DATA_TX_TO_W_COMPONENT_NAME data_tx_to_w
#define DATA_TX_TO_W_BASE 0x1f0
#define DATA_TX_TO_W_SPAN 16
#define DATA_TX_TO_W_END 0x1ff
#define DATA_TX_TO_W_BIT_CLEARING_EDGE_REGISTER 0
#define DATA_TX_TO_W_BIT_MODIFYING_OUTPUT_REGISTER 0
#define DATA_TX_TO_W_CAPTURE 0
#define DATA_TX_TO_W_DATA_WIDTH 9
#define DATA_TX_TO_W_DO_TEST_BENCH_WIRING 0
#define DATA_TX_TO_W_DRIVEN_SIM_VALUE 0
#define DATA_TX_TO_W_EDGE_TYPE NONE
#define DATA_TX_TO_W_FREQ 50000000
#define DATA_TX_TO_W_HAS_IN 0
#define DATA_TX_TO_W_HAS_OUT 1
#define DATA_TX_TO_W_HAS_TRI 0
#define DATA_TX_TO_W_IRQ_TYPE NONE
#define DATA_TX_TO_W_RESET_VALUE 0

/*
 * Macros for device 'data_tx_to_w_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'DATA_TX_TO_W_0_'.
 * The prefix is the slave descriptor.
 */
#define DATA_TX_TO_W_0_COMPONENT_TYPE altera_avalon_pio
#define DATA_TX_TO_W_0_COMPONENT_NAME data_tx_to_w_0
#define DATA_TX_TO_W_0_BASE 0x2f0
#define DATA_TX_TO_W_0_SPAN 16
#define DATA_TX_TO_W_0_END 0x2ff
#define DATA_TX_TO_W_0_BIT_CLEARING_EDGE_REGISTER 0
#define DATA_TX_TO_W_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define DATA_TX_TO_W_0_CAPTURE 0
#define DATA_TX_TO_W_0_DATA_WIDTH 9
#define DATA_TX_TO_W_0_DO_TEST_BENCH_WIRING 0
#define DATA_TX_TO_W_0_DRIVEN_SIM_VALUE 0
#define DATA_TX_TO_W_0_EDGE_TYPE NONE
#define DATA_TX_TO_W_0_FREQ 50000000
#define DATA_TX_TO_W_0_HAS_IN 0
#define DATA_TX_TO_W_0_HAS_OUT 1
#define DATA_TX_TO_W_0_HAS_TRI 0
#define DATA_TX_TO_W_0_IRQ_TYPE NONE
#define DATA_TX_TO_W_0_RESET_VALUE 0

/*
 * Macros for device 'fsm_info', class 'altera_avalon_pio'
 * The macros are prefixed with 'FSM_INFO_'.
 * The prefix is the slave descriptor.
 */
#define FSM_INFO_COMPONENT_TYPE altera_avalon_pio
#define FSM_INFO_COMPONENT_NAME fsm_info
#define FSM_INFO_BASE 0x3f0
#define FSM_INFO_SPAN 16
#define FSM_INFO_END 0x3ff
#define FSM_INFO_BIT_CLEARING_EDGE_REGISTER 0
#define FSM_INFO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FSM_INFO_CAPTURE 0
#define FSM_INFO_DATA_WIDTH 6
#define FSM_INFO_DO_TEST_BENCH_WIRING 0
#define FSM_INFO_DRIVEN_SIM_VALUE 0
#define FSM_INFO_EDGE_TYPE NONE
#define FSM_INFO_FREQ 50000000
#define FSM_INFO_HAS_IN 1
#define FSM_INFO_HAS_OUT 0
#define FSM_INFO_HAS_TRI 0
#define FSM_INFO_IRQ_TYPE NONE
#define FSM_INFO_RESET_VALUE 0

/*
 * Macros for device 'fsm_info_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'FSM_INFO_0_'.
 * The prefix is the slave descriptor.
 */
#define FSM_INFO_0_COMPONENT_TYPE altera_avalon_pio
#define FSM_INFO_0_COMPONENT_NAME fsm_info_0
#define FSM_INFO_0_BASE 0x4f0
#define FSM_INFO_0_SPAN 16
#define FSM_INFO_0_END 0x4ff
#define FSM_INFO_0_BIT_CLEARING_EDGE_REGISTER 0
#define FSM_INFO_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FSM_INFO_0_CAPTURE 0
#define FSM_INFO_0_DATA_WIDTH 6
#define FSM_INFO_0_DO_TEST_BENCH_WIRING 0
#define FSM_INFO_0_DRIVEN_SIM_VALUE 0
#define FSM_INFO_0_EDGE_TYPE NONE
#define FSM_INFO_0_FREQ 50000000
#define FSM_INFO_0_HAS_IN 1
#define FSM_INFO_0_HAS_OUT 0
#define FSM_INFO_0_HAS_TRI 0
#define FSM_INFO_0_IRQ_TYPE NONE
#define FSM_INFO_0_RESET_VALUE 0

/*
 * Macros for device 'link_disable', class 'altera_avalon_pio'
 * The macros are prefixed with 'LINK_DISABLE_'.
 * The prefix is the slave descriptor.
 */
#define LINK_DISABLE_COMPONENT_TYPE altera_avalon_pio
#define LINK_DISABLE_COMPONENT_NAME link_disable
#define LINK_DISABLE_BASE 0x5f0
#define LINK_DISABLE_SPAN 16
#define LINK_DISABLE_END 0x5ff
#define LINK_DISABLE_BIT_CLEARING_EDGE_REGISTER 0
#define LINK_DISABLE_BIT_MODIFYING_OUTPUT_REGISTER 0
#define LINK_DISABLE_CAPTURE 0
#define LINK_DISABLE_DATA_WIDTH 1
#define LINK_DISABLE_DO_TEST_BENCH_WIRING 0
#define LINK_DISABLE_DRIVEN_SIM_VALUE 0
#define LINK_DISABLE_EDGE_TYPE NONE
#define LINK_DISABLE_FREQ 50000000
#define LINK_DISABLE_HAS_IN 0
#define LINK_DISABLE_HAS_OUT 1
#define LINK_DISABLE_HAS_TRI 0
#define LINK_DISABLE_IRQ_TYPE NONE
#define LINK_DISABLE_RESET_VALUE 0

/*
 * Macros for device 'link_disable_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'LINK_DISABLE_0_'.
 * The prefix is the slave descriptor.
 */
#define LINK_DISABLE_0_COMPONENT_TYPE altera_avalon_pio
#define LINK_DISABLE_0_COMPONENT_NAME link_disable_0
#define LINK_DISABLE_0_BASE 0x6f0
#define LINK_DISABLE_0_SPAN 16
#define LINK_DISABLE_0_END 0x6ff
#define LINK_DISABLE_0_BIT_CLEARING_EDGE_REGISTER 0
#define LINK_DISABLE_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define LINK_DISABLE_0_CAPTURE 0
#define LINK_DISABLE_0_DATA_WIDTH 1
#define LINK_DISABLE_0_DO_TEST_BENCH_WIRING 0
#define LINK_DISABLE_0_DRIVEN_SIM_VALUE 0
#define LINK_DISABLE_0_EDGE_TYPE NONE
#define LINK_DISABLE_0_FREQ 50000000
#define LINK_DISABLE_0_HAS_IN 0
#define LINK_DISABLE_0_HAS_OUT 1
#define LINK_DISABLE_0_HAS_TRI 0
#define LINK_DISABLE_0_IRQ_TYPE NONE
#define LINK_DISABLE_0_RESET_VALUE 0

/*
 * Macros for device 'link_start', class 'altera_avalon_pio'
 * The macros are prefixed with 'LINK_START_'.
 * The prefix is the slave descriptor.
 */
#define LINK_START_COMPONENT_TYPE altera_avalon_pio
#define LINK_START_COMPONENT_NAME link_start
#define LINK_START_BASE 0x7f0
#define LINK_START_SPAN 16
#define LINK_START_END 0x7ff
#define LINK_START_BIT_CLEARING_EDGE_REGISTER 0
#define LINK_START_BIT_MODIFYING_OUTPUT_REGISTER 0
#define LINK_START_CAPTURE 0
#define LINK_START_DATA_WIDTH 1
#define LINK_START_DO_TEST_BENCH_WIRING 0
#define LINK_START_DRIVEN_SIM_VALUE 0
#define LINK_START_EDGE_TYPE NONE
#define LINK_START_FREQ 50000000
#define LINK_START_HAS_IN 0
#define LINK_START_HAS_OUT 1
#define LINK_START_HAS_TRI 0
#define LINK_START_IRQ_TYPE NONE
#define LINK_START_RESET_VALUE 1

/*
 * Macros for device 'link_start_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'LINK_START_0_'.
 * The prefix is the slave descriptor.
 */
#define LINK_START_0_COMPONENT_TYPE altera_avalon_pio
#define LINK_START_0_COMPONENT_NAME link_start_0
#define LINK_START_0_BASE 0x8f0
#define LINK_START_0_SPAN 16
#define LINK_START_0_END 0x8ff
#define LINK_START_0_BIT_CLEARING_EDGE_REGISTER 0
#define LINK_START_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define LINK_START_0_CAPTURE 0
#define LINK_START_0_DATA_WIDTH 1
#define LINK_START_0_DO_TEST_BENCH_WIRING 0
#define LINK_START_0_DRIVEN_SIM_VALUE 0
#define LINK_START_0_EDGE_TYPE NONE
#define LINK_START_0_FREQ 50000000
#define LINK_START_0_HAS_IN 0
#define LINK_START_0_HAS_OUT 1
#define LINK_START_0_HAS_TRI 0
#define LINK_START_0_IRQ_TYPE NONE
#define LINK_START_0_RESET_VALUE 1

/*
 * Macros for device 'send_fct_now', class 'altera_avalon_pio'
 * The macros are prefixed with 'SEND_FCT_NOW_'.
 * The prefix is the slave descriptor.
 */
#define SEND_FCT_NOW_COMPONENT_TYPE altera_avalon_pio
#define SEND_FCT_NOW_COMPONENT_NAME send_fct_now
#define SEND_FCT_NOW_BASE 0x9f0
#define SEND_FCT_NOW_SPAN 16
#define SEND_FCT_NOW_END 0x9ff
#define SEND_FCT_NOW_BIT_CLEARING_EDGE_REGISTER 0
#define SEND_FCT_NOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SEND_FCT_NOW_CAPTURE 0
#define SEND_FCT_NOW_DATA_WIDTH 1
#define SEND_FCT_NOW_DO_TEST_BENCH_WIRING 0
#define SEND_FCT_NOW_DRIVEN_SIM_VALUE 0
#define SEND_FCT_NOW_EDGE_TYPE NONE
#define SEND_FCT_NOW_FREQ 50000000
#define SEND_FCT_NOW_HAS_IN 0
#define SEND_FCT_NOW_HAS_OUT 1
#define SEND_FCT_NOW_HAS_TRI 0
#define SEND_FCT_NOW_IRQ_TYPE NONE
#define SEND_FCT_NOW_RESET_VALUE 0

/*
 * Macros for device 'send_fct_now_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'SEND_FCT_NOW_0_'.
 * The prefix is the slave descriptor.
 */
#define SEND_FCT_NOW_0_COMPONENT_TYPE altera_avalon_pio
#define SEND_FCT_NOW_0_COMPONENT_NAME send_fct_now_0
#define SEND_FCT_NOW_0_BASE 0xaf0
#define SEND_FCT_NOW_0_SPAN 16
#define SEND_FCT_NOW_0_END 0xaff
#define SEND_FCT_NOW_0_BIT_CLEARING_EDGE_REGISTER 0
#define SEND_FCT_NOW_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SEND_FCT_NOW_0_CAPTURE 0
#define SEND_FCT_NOW_0_DATA_WIDTH 1
#define SEND_FCT_NOW_0_DO_TEST_BENCH_WIRING 0
#define SEND_FCT_NOW_0_DRIVEN_SIM_VALUE 0
#define SEND_FCT_NOW_0_EDGE_TYPE NONE
#define SEND_FCT_NOW_0_FREQ 50000000
#define SEND_FCT_NOW_0_HAS_IN 0
#define SEND_FCT_NOW_0_HAS_OUT 1
#define SEND_FCT_NOW_0_HAS_TRI 0
#define SEND_FCT_NOW_0_IRQ_TYPE NONE
#define SEND_FCT_NOW_0_RESET_VALUE 0

/*
 * Macros for device 'timec_en_to_tx', class 'altera_avalon_pio'
 * The macros are prefixed with 'TIMEC_EN_TO_TX_'.
 * The prefix is the slave descriptor.
 */
#define TIMEC_EN_TO_TX_COMPONENT_TYPE altera_avalon_pio
#define TIMEC_EN_TO_TX_COMPONENT_NAME timec_en_to_tx
#define TIMEC_EN_TO_TX_BASE 0xbf0
#define TIMEC_EN_TO_TX_SPAN 16
#define TIMEC_EN_TO_TX_END 0xbff
#define TIMEC_EN_TO_TX_BIT_CLEARING_EDGE_REGISTER 0
#define TIMEC_EN_TO_TX_BIT_MODIFYING_OUTPUT_REGISTER 0
#define TIMEC_EN_TO_TX_CAPTURE 0
#define TIMEC_EN_TO_TX_DATA_WIDTH 1
#define TIMEC_EN_TO_TX_DO_TEST_BENCH_WIRING 0
#define TIMEC_EN_TO_TX_DRIVEN_SIM_VALUE 0
#define TIMEC_EN_TO_TX_EDGE_TYPE NONE
#define TIMEC_EN_TO_TX_FREQ 50000000
#define TIMEC_EN_TO_TX_HAS_IN 0
#define TIMEC_EN_TO_TX_HAS_OUT 1
#define TIMEC_EN_TO_TX_HAS_TRI 0
#define TIMEC_EN_TO_TX_IRQ_TYPE NONE
#define TIMEC_EN_TO_TX_RESET_VALUE 0

/*
 * Macros for device 'timec_en_to_tx_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'TIMEC_EN_TO_TX_0_'.
 * The prefix is the slave descriptor.
 */
#define TIMEC_EN_TO_TX_0_COMPONENT_TYPE altera_avalon_pio
#define TIMEC_EN_TO_TX_0_COMPONENT_NAME timec_en_to_tx_0
#define TIMEC_EN_TO_TX_0_BASE 0xcf0
#define TIMEC_EN_TO_TX_0_SPAN 16
#define TIMEC_EN_TO_TX_0_END 0xcff
#define TIMEC_EN_TO_TX_0_BIT_CLEARING_EDGE_REGISTER 0
#define TIMEC_EN_TO_TX_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define TIMEC_EN_TO_TX_0_CAPTURE 0
#define TIMEC_EN_TO_TX_0_DATA_WIDTH 1
#define TIMEC_EN_TO_TX_0_DO_TEST_BENCH_WIRING 0
#define TIMEC_EN_TO_TX_0_DRIVEN_SIM_VALUE 0
#define TIMEC_EN_TO_TX_0_EDGE_TYPE NONE
#define TIMEC_EN_TO_TX_0_FREQ 50000000
#define TIMEC_EN_TO_TX_0_HAS_IN 0
#define TIMEC_EN_TO_TX_0_HAS_OUT 1
#define TIMEC_EN_TO_TX_0_HAS_TRI 0
#define TIMEC_EN_TO_TX_0_IRQ_TYPE NONE
#define TIMEC_EN_TO_TX_0_RESET_VALUE 0

/*
 * Macros for device 'timec_rx_r', class 'altera_avalon_pio'
 * The macros are prefixed with 'TIMEC_RX_R_'.
 * The prefix is the slave descriptor.
 */
#define TIMEC_RX_R_COMPONENT_TYPE altera_avalon_pio
#define TIMEC_RX_R_COMPONENT_NAME timec_rx_r
#define TIMEC_RX_R_BASE 0xdf0
#define TIMEC_RX_R_SPAN 16
#define TIMEC_RX_R_END 0xdff
#define TIMEC_RX_R_BIT_CLEARING_EDGE_REGISTER 0
#define TIMEC_RX_R_BIT_MODIFYING_OUTPUT_REGISTER 0
#define TIMEC_RX_R_CAPTURE 0
#define TIMEC_RX_R_DATA_WIDTH 8
#define TIMEC_RX_R_DO_TEST_BENCH_WIRING 0
#define TIMEC_RX_R_DRIVEN_SIM_VALUE 0
#define TIMEC_RX_R_EDGE_TYPE NONE
#define TIMEC_RX_R_FREQ 50000000
#define TIMEC_RX_R_HAS_IN 1
#define TIMEC_RX_R_HAS_OUT 0
#define TIMEC_RX_R_HAS_TRI 0
#define TIMEC_RX_R_IRQ_TYPE NONE
#define TIMEC_RX_R_RESET_VALUE 0

/*
 * Macros for device 'timec_rx_r_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'TIMEC_RX_R_0_'.
 * The prefix is the slave descriptor.
 */
#define TIMEC_RX_R_0_COMPONENT_TYPE altera_avalon_pio
#define TIMEC_RX_R_0_COMPONENT_NAME timec_rx_r_0
#define TIMEC_RX_R_0_BASE 0xef0
#define TIMEC_RX_R_0_SPAN 16
#define TIMEC_RX_R_0_END 0xeff
#define TIMEC_RX_R_0_BIT_CLEARING_EDGE_REGISTER 0
#define TIMEC_RX_R_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define TIMEC_RX_R_0_CAPTURE 0
#define TIMEC_RX_R_0_DATA_WIDTH 8
#define TIMEC_RX_R_0_DO_TEST_BENCH_WIRING 0
#define TIMEC_RX_R_0_DRIVEN_SIM_VALUE 0
#define TIMEC_RX_R_0_EDGE_TYPE NONE
#define TIMEC_RX_R_0_FREQ 50000000
#define TIMEC_RX_R_0_HAS_IN 1
#define TIMEC_RX_R_0_HAS_OUT 0
#define TIMEC_RX_R_0_HAS_TRI 0
#define TIMEC_RX_R_0_IRQ_TYPE NONE
#define TIMEC_RX_R_0_RESET_VALUE 0

/*
 * Macros for device 'timec_rx_ready', class 'altera_avalon_pio'
 * The macros are prefixed with 'TIMEC_RX_READY_'.
 * The prefix is the slave descriptor.
 */
#define TIMEC_RX_READY_COMPONENT_TYPE altera_avalon_pio
#define TIMEC_RX_READY_COMPONENT_NAME timec_rx_ready
#define TIMEC_RX_READY_BASE 0xff0
#define TIMEC_RX_READY_SPAN 16
#define TIMEC_RX_READY_END 0xfff
#define TIMEC_RX_READY_BIT_CLEARING_EDGE_REGISTER 0
#define TIMEC_RX_READY_BIT_MODIFYING_OUTPUT_REGISTER 0
#define TIMEC_RX_READY_CAPTURE 0
#define TIMEC_RX_READY_DATA_WIDTH 1
#define TIMEC_RX_READY_DO_TEST_BENCH_WIRING 0
#define TIMEC_RX_READY_DRIVEN_SIM_VALUE 0
#define TIMEC_RX_READY_EDGE_TYPE NONE
#define TIMEC_RX_READY_FREQ 50000000
#define TIMEC_RX_READY_HAS_IN 1
#define TIMEC_RX_READY_HAS_OUT 0
#define TIMEC_RX_READY_HAS_TRI 0
#define TIMEC_RX_READY_IRQ_TYPE NONE
#define TIMEC_RX_READY_RESET_VALUE 0

/*
 * Macros for device 'timec_rx_ready_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'TIMEC_RX_READY_0_'.
 * The prefix is the slave descriptor.
 */
#define TIMEC_RX_READY_0_COMPONENT_TYPE altera_avalon_pio
#define TIMEC_RX_READY_0_COMPONENT_NAME timec_rx_ready_0
#define TIMEC_RX_READY_0_BASE 0x10000
#define TIMEC_RX_READY_0_SPAN 16
#define TIMEC_RX_READY_0_END 0x1000f
#define TIMEC_RX_READY_0_BIT_CLEARING_EDGE_REGISTER 0
#define TIMEC_RX_READY_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define TIMEC_RX_READY_0_CAPTURE 0
#define TIMEC_RX_READY_0_DATA_WIDTH 1
#define TIMEC_RX_READY_0_DO_TEST_BENCH_WIRING 0
#define TIMEC_RX_READY_0_DRIVEN_SIM_VALUE 0
#define TIMEC_RX_READY_0_EDGE_TYPE NONE
#define TIMEC_RX_READY_0_FREQ 50000000
#define TIMEC_RX_READY_0_HAS_IN 1
#define TIMEC_RX_READY_0_HAS_OUT 0
#define TIMEC_RX_READY_0_HAS_TRI 0
#define TIMEC_RX_READY_0_IRQ_TYPE NONE
#define TIMEC_RX_READY_0_RESET_VALUE 0

/*
 * Macros for device 'timec_tx_ready', class 'altera_avalon_pio'
 * The macros are prefixed with 'TIMEC_TX_READY_'.
 * The prefix is the slave descriptor.
 */
#define TIMEC_TX_READY_COMPONENT_TYPE altera_avalon_pio
#define TIMEC_TX_READY_COMPONENT_NAME timec_tx_ready
#define TIMEC_TX_READY_BASE 0x20000
#define TIMEC_TX_READY_SPAN 16
#define TIMEC_TX_READY_END 0x2000f
#define TIMEC_TX_READY_BIT_CLEARING_EDGE_REGISTER 0
#define TIMEC_TX_READY_BIT_MODIFYING_OUTPUT_REGISTER 0
#define TIMEC_TX_READY_CAPTURE 0
#define TIMEC_TX_READY_DATA_WIDTH 1
#define TIMEC_TX_READY_DO_TEST_BENCH_WIRING 0
#define TIMEC_TX_READY_DRIVEN_SIM_VALUE 0
#define TIMEC_TX_READY_EDGE_TYPE NONE
#define TIMEC_TX_READY_FREQ 50000000
#define TIMEC_TX_READY_HAS_IN 1
#define TIMEC_TX_READY_HAS_OUT 0
#define TIMEC_TX_READY_HAS_TRI 0
#define TIMEC_TX_READY_IRQ_TYPE NONE
#define TIMEC_TX_READY_RESET_VALUE 0

/*
 * Macros for device 'timec_tx_ready_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'TIMEC_TX_READY_0_'.
 * The prefix is the slave descriptor.
 */
#define TIMEC_TX_READY_0_COMPONENT_TYPE altera_avalon_pio
#define TIMEC_TX_READY_0_COMPONENT_NAME timec_tx_ready_0
#define TIMEC_TX_READY_0_BASE 0x30000
#define TIMEC_TX_READY_0_SPAN 16
#define TIMEC_TX_READY_0_END 0x3000f
#define TIMEC_TX_READY_0_BIT_CLEARING_EDGE_REGISTER 0
#define TIMEC_TX_READY_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define TIMEC_TX_READY_0_CAPTURE 0
#define TIMEC_TX_READY_0_DATA_WIDTH 1
#define TIMEC_TX_READY_0_DO_TEST_BENCH_WIRING 0
#define TIMEC_TX_READY_0_DRIVEN_SIM_VALUE 0
#define TIMEC_TX_READY_0_EDGE_TYPE NONE
#define TIMEC_TX_READY_0_FREQ 50000000
#define TIMEC_TX_READY_0_HAS_IN 1
#define TIMEC_TX_READY_0_HAS_OUT 0
#define TIMEC_TX_READY_0_HAS_TRI 0
#define TIMEC_TX_READY_0_IRQ_TYPE NONE
#define TIMEC_TX_READY_0_RESET_VALUE 0

/*
 * Macros for device 'timec_tx_to_w', class 'altera_avalon_pio'
 * The macros are prefixed with 'TIMEC_TX_TO_W_'.
 * The prefix is the slave descriptor.
 */
#define TIMEC_TX_TO_W_COMPONENT_TYPE altera_avalon_pio
#define TIMEC_TX_TO_W_COMPONENT_NAME timec_tx_to_w
#define TIMEC_TX_TO_W_BASE 0x40000
#define TIMEC_TX_TO_W_SPAN 16
#define TIMEC_TX_TO_W_END 0x4000f
#define TIMEC_TX_TO_W_BIT_CLEARING_EDGE_REGISTER 0
#define TIMEC_TX_TO_W_BIT_MODIFYING_OUTPUT_REGISTER 0
#define TIMEC_TX_TO_W_CAPTURE 0
#define TIMEC_TX_TO_W_DATA_WIDTH 8
#define TIMEC_TX_TO_W_DO_TEST_BENCH_WIRING 0
#define TIMEC_TX_TO_W_DRIVEN_SIM_VALUE 0
#define TIMEC_TX_TO_W_EDGE_TYPE NONE
#define TIMEC_TX_TO_W_FREQ 50000000
#define TIMEC_TX_TO_W_HAS_IN 0
#define TIMEC_TX_TO_W_HAS_OUT 1
#define TIMEC_TX_TO_W_HAS_TRI 0
#define TIMEC_TX_TO_W_IRQ_TYPE NONE
#define TIMEC_TX_TO_W_RESET_VALUE 0

/*
 * Macros for device 'timec_tx_to_w_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'TIMEC_TX_TO_W_0_'.
 * The prefix is the slave descriptor.
 */
#define TIMEC_TX_TO_W_0_COMPONENT_TYPE altera_avalon_pio
#define TIMEC_TX_TO_W_0_COMPONENT_NAME timec_tx_to_w_0
#define TIMEC_TX_TO_W_0_BASE 0x50000
#define TIMEC_TX_TO_W_0_SPAN 16
#define TIMEC_TX_TO_W_0_END 0x5000f
#define TIMEC_TX_TO_W_0_BIT_CLEARING_EDGE_REGISTER 0
#define TIMEC_TX_TO_W_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define TIMEC_TX_TO_W_0_CAPTURE 0
#define TIMEC_TX_TO_W_0_DATA_WIDTH 8
#define TIMEC_TX_TO_W_0_DO_TEST_BENCH_WIRING 0
#define TIMEC_TX_TO_W_0_DRIVEN_SIM_VALUE 0
#define TIMEC_TX_TO_W_0_EDGE_TYPE NONE
#define TIMEC_TX_TO_W_0_FREQ 50000000
#define TIMEC_TX_TO_W_0_HAS_IN 0
#define TIMEC_TX_TO_W_0_HAS_OUT 1
#define TIMEC_TX_TO_W_0_HAS_TRI 0
#define TIMEC_TX_TO_W_0_IRQ_TYPE NONE
#define TIMEC_TX_TO_W_0_RESET_VALUE 0


#endif /* _ALTERA_SPW_ULTRA_LIGHT_H_ */
