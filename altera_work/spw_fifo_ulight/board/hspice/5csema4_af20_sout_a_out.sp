************************************************************************
* Quartus HSPICE Writer I/O Simulation Deck
*
* This spice simulation deck was automatically generated by Quartus for
* the following IO settings:
*
*  Device:       5CSEMA4U23C6
*  Speed Grade:  C6
*  Pins:         AF20 (sout_a)
*                AG20 (sout_a(n))
*  Bank:         IO Bank 4A (Column I/O)
*  I/O Standard: LVDS
*  OCT:          Off
*
* Quartus' default I/O timing delays assume the following slow corner
* simulation conditions. 
*
*  Specified Test Conditions For Quartus Tco
*    Temperature:      85C (Slowest Temperature Corner)
*    Transistor Model: TT (Typical Transistor Corner)
*    Vccn:             2.325V (Vccn_min = Nominal - 5% - 50mV additional margin)
*    Vccpd:            2.325V (Vccpd_min = Nominal - 5% - 50mV additional margin)
*    Load:             100 ohm Termination Resistor
*    Vcc:              1.00V (Vcc_min = Nominal - 100mV additional margin)
*
* For C6 devices, the TT transistor corner provides an approximation 
* for worst case timing. However, for functionality simulations,
* it is recommended that the SS corner be simulated as well.
*
* Note: Actual production devices can be as fast as the FF corner.  
*       Any simulations for hold times should be conducted using the 
*       fast process corner with the following simulation conditions.
*         Temperature:      0C (Fastest Temperature Corner)
*         Transistor Model: FF (Fastest Transistor Corner)
*         Vccn:             2.750V (Vccn_hold = Nominal + 10%)
*         Vccpd:            2.750V
*         Vcc:              1.180V (Vcc_hold = Nominal + 7%)
*         Package Model:    Short-circuit from pad to pin (no parasitics)
*
*       For a detailed description of hold time analysis see 
*       the Quartus II HSPICE Writer AppNote.
*
* Usage:
*   This spice deck is setup to ensure that the I/O path delay of a pin
*   is not double counted. This is accomplished by subtracting the I/O
*   path delay from the HSPICE simulation delay result which will allow
*   the Quartus Tco and HSPICE Tpd to be added to determine the total
*   path delay.  The necessary steps to simulate a single IO are as 
*   follows:
*
*    1) Replace the sample board and termination circuit below with
*       your desired circuit.
*    2) Replace the VccN and Vccpd voltages with your desired value or
*       leave them unchanged for a slow corner simulation.
*   3a) If you wish to simulate a different temperature or transistor
*       corner than specified in this file, you will need to manually
*       subtract off the double counting.  Consult the Quartus II HSPICE
*       Writer AppNote for the recommended procedure.
*   3b) If you are simulating with the default temperature and transistor
*       corner, this spice deck will automatically subtract the double
*       counting.  For a description of the process used to accomplish
*       this, please consult the Quartus II HSPICE Writer AppNote.
*
* Warnings:
*
************************************************************************

************************************************************************
* Process Settings
************************************************************************
.options brief 
.inc 'lib/cv_tt.inc' * TT process corner

************************************************************************
* Simulation Options
************************************************************************
.options brief=0
.options badchr co=132 acct ingold=2 nomod dv=1.0
+        dcstep=1 absv=1e-2 absi=1e-7 probe captab csdf=2 accurate=1 post=2
.options dcon=1
.option converge=1
.temp 85

************************************************************************
* Constant Definition
************************************************************************
vlvdsoe    rlvdsoe   0     vc * Set to vc to enable buffer output
vrvod2     vod2      0     rvod2
vrvod1     vod1      0     rvod1
vrvod0     vod0      0     rvod0
vrkick1    kick0     0     rkick

vdin       din       0     pulse(0 vc 0 0.2ns 0.2ns 1.1ns 2.6ns)

************************************************************************
* IO Buffer Netlist 
************************************************************************
.include 'cir/lvds_output.inc'
.include 'cir/io_buffer_load.inc'

************************************************************************
* Programmable Preemphasis
************************************************************************
.lib 'lib/lvds_preemphasis_select.lib' preemp_def

************************************************************************
* Programmable VOD
************************************************************************
.lib 'lib/lvds_vod_select.lib' vod_def

************************************************************************
* I/O Buffer Instantiation
************************************************************************

* Supply Voltages Settings
.param vcn=2.325
.param vpd=2.325
.param vc=1.00

* Instantiate Power Supplies
vvcc       vcc       0     vc     * FPGA core voltage
vvccn      vccn      0     vcn    * IO supply voltage
vvccpd     vccpd     0     vpd    * Pre-drive supply voltage
vvss       vss       0     0      * FPGA core ground
vvssn      vssn      0     0      * FPGA IO ground

* Instantiate I/O Buffer
xlvds_buf din die dieb vccn vcpad0 vcpad1 vcc
+ kick0 vod2 vod1 vod0 rlvdsoe lvds_out

* Internal Loading on Pad
* - These pads also have single-ended buffers connected to them. These
*   buffers are disabled but add parasitic loads that are modeled below:
xio_load  die  vccn vccpd vcpad0 vcc io_buffer_load
xio_loadb dieb vccn vccpd vcpad1 vcc io_buffer_load

* I/O Buffer Package Model
* - Standard Column I/O package trace
* Positive end
.lib 'lib/package.lib' io  
xpkg die pin io_pkg
* Negative end
xpkgb dieb pinb io_pkg



* /////////////////////////////////////////////////////////////////// *
* I/O Board Trace And Termination Description                         *
*   - Replace this with your board trace and termination description  *
* /////////////////////////////////////////////////////////////////// *

* LVDS Termination
* Board termination network as specified in Quartus
Rfar_differential load loadb 100
 * Short between pin and load
Rsmall pin load 10u
Rsmallb pinb loadb 10u


************************************************************************
* Double Counting Compensation Circuitry
*
*   The following circuit is designed to calculate the amount of double
*   counting between Quartus and the HSPICE models.  If you have not
*   changed the default simulation temperature or transistor corner the
*   double counting will be automatically compensated by this spice 
*   deck.  In the event you wish to simulate an IO at a different
*   temperature or transistor corner you will need to remove this
*   section of code and manually account for double counting.  A 
*   description of Altera's recommended procedure for this process can
*   be found in the Quartus II HSPICE Writer AppNote.
*
************************************************************************

* Supply Voltages Settings
.param vcn_tl=2.325
.param vpd_tl=2.325

* Instantiate Power Supplies
vvccn_tl      vccn_tl      0     vcn_tl
vvssn_tl      vssn_tl      0     0
vvccpd_tl     vccpd_tl     0     vpd_tl

* Instantiate I/O Buffer
xlvds_buf_tl din die_tl dieb_tl vccn_tl vcpad0_tl vcpad1_tl vcc
+ kick0 vod2 vod1 vod0 rlvdsoe lvds_out

* Internal Loading on Pad
xio_load_tl die_tl vccn_tl vccpd_tl vcpad0_tl vcc io_buffer_load
xio_loadb_tl dieb_tl vccn_tl vccpd_tl vcpad1_tl vcc io_buffer_load

* I/O Buffer Package Model
* Positive end
xpkg_tl die_tl pin_tl io_pkg
* Negative end
xpkgb_tl dieb_tl pinb_tl io_pkg

* Default Altera Test Load
* - LVDS default test condition is a 100 ohm resistor
*   between the non-inverted and inverted ends of the differential signal
* Board termination network as specified in Quartus
Rfar_differential_tl load_tl loadb_tl 100
 * Short between pin_tl and load_tl
Rsmall_tl pin_tl load_tl 10u
Rsmallb_tl pinb_tl loadb_tl 10u


************************************************************************
* Simulation Analysis Setup
************************************************************************

* Print out the voltage waveform at both the FPGA pin and far end load
.print tran v(pin) v(pinb) v(load) v(loadb)
.tran 0.020ns 17ns

* Measure the propagation delay to the load pin.  This value will
* include some double counting with Quartus' Tco
.measure TRAN tpd_uncomp_rise TRIG v(din) val='vc*0.5' rise=1 TARG v(load,loadb) val='0' rise=1
.measure TRAN tpd_uncomp_fall TRIG v(din) val='vc*0.5' td=8.7ns fall=1 TARG v(load,loadb) val='0' td=8.7ns fall=1

* Use the test load driver to calculate the amount of double counting
.measure TRAN t_dblcnt_rise TRIG v(din) val='vc*0.5' rise=1 TARG v(pin_tl,pinb_tl) val='0' rise=1
.measure TRAN t_dblcnt_fall TRIG v(din) val='vc*0.5' td=8.7ns fall=1 TARG v(pin_tl,pinb_tl) val='0' td=8.7ns fall=1

* Calculate the true propagation delay by subtraction
.measure TRAN tpd_rise PARAM='tpd_uncomp_rise-t_dblcnt_rise'
.measure TRAN tpd_fall PARAM='tpd_uncomp_fall-t_dblcnt_fall'

.end
